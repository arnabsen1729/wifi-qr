Description: all is done with shellcheck
 Bash implement with shellcheck.
 Fixes: https://github.com/kokoye2007/wifi-qr/issues/9 
 issue and support by Paul Wise.
 .
 wifi-qr (0.1-2) unstable; urgency=medium
 .
   * current and hidden arrary
Author: kokoye2007 <kokoye2007@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2020-06-17

--- wifi-qr-0.1.orig/wifi-qr
+++ wifi-qr-0.1/wifi-qr
@@ -10,7 +10,6 @@ WIFIS=''
 SSID=''
 KEEY=''
 PSK=''
-HIDDEN=''
 QSSID=''
 QKEES=''
 QSSIDO=''
@@ -20,7 +19,7 @@ GREEN=$(tput setaf 2)
 BLUE=$(tput setaf 4)
 RESET=$(tput sgr0)
 BOLD=$(tput bold)
-VERSION=0.1-1
+VERSION=0.1-2
 
 ## NMCLI no need SUDO ## 0.1.1
 #Check root or sudo
@@ -74,7 +73,8 @@ main_menu() {
 
 #GUI
 call_wifi_gui() {
-  IFS=$'\r\n' GLOBIGNORE='*' command eval  'wifilist=($(nmcli  -g NAME,TYPE connection | grep 802-11-wireless | cut -f1 -d":"))'
+#  IFS=$'\r\n' GLOBIGNORE='*' command eval 'wifilist=($(nmcli  -g NAME,TYPE connection | grep 802-11-wireless | cut -f1 -d:))'
+  mapfile -t wifilist < <(nmcli  -g NAME,TYPE connection | grep 802-11-wireless | cut -f1 -d:)
 
   WIFIS=$(zenity --list --column="SSID" \
 	  --width=300 --height=600 \
@@ -90,15 +90,15 @@ call_wifi_gui() {
 
 call_qr_gui() {
   call_wifi_pass
-  QR_FILE_NAME="wifi-qr-$(echo $WIFIS | tr -dc '[:alnum:]').png"
+  QR_FILE_NAME="wifi-qr-$(echo "$WIFIS" | tr -dc '[:alnum:]').png"
   SAVE_QR_DIR="${HOME}/Pictures/"
-  QR_PNG="$(zenity --file-selection --save --confirm-overwrite --filename=$SAVE_QR_DIR/$QR_FILE_NAME)"
+  QR_PNG="$(zenity --file-selection --save --confirm-overwrite --filename="$SAVE_QR_DIR"/"$QR_FILE_NAME")"
   if [[ -z "$QR_PNG" ]]; then
 	  main_menu
   else
     #QR_PNG="/tmp/wifi-qr-$(echo $WIFIS | tr -dc '[:alnum:]').png"
-    qrencode -l h -s 14 -o $QR_PNG "WIFI:S:$WIFIS;P:$KEEY;$PSSK$H;"
-    xdg-open $QR_PNG
+    qrencode -l h -s 14 -o "$QR_PNG" "WIFI:S:$WIFIS;P:$KEEY;$PSSK$H;"
+    xdg-open "$QR_PNG"
   fi
 }
 call_current_wifi_gui() {
@@ -108,12 +108,13 @@ call_current_wifi_gui() {
 
 #WiFi Command from terminal
 call_wifi_terminal() {
-  IFS=$'\r\n' GLOBIGNORE='*' command eval  'wifilist=($(nmcli  -g NAME,TYPE connection | grep 802-11-wireless | cut -f1 -d":"))'
+#  IFS=$'\r\n' GLOBIGNORE='*' command eval  'wifilist=($(nmcli  -g NAME,TYPE connection | grep 802-11-wireless | cut -f1 -d":"))'
+  mapfile -t wifilist < <(nmcli  -g NAME,TYPE connection | grep 802-11-wireless | cut -f1 -d:)
   OLD_IFS=$IFS
   IFS=$'\n'
   for l in "${wifilist[@]}"; do
     array[$i]=$l
-    i=$(($i + 1))
+    i=$((i + 1))
   done
 
   i=0
@@ -127,7 +128,7 @@ call_wifi_terminal() {
   echo -e "${BLUE}===========================================${RESET}"
   echo -e "${BOLD}${WHITE}please choose WiFi ssid ${RESET}"
   echo -e "${BLUE}===========================================${RESET}"
-  read -e wifissid
+  read -e -r wifissid
   WIFIS=${array[$wifissid]}
   echo -e "${BLUE}===========================================${RESET}"
   echo -e "\nYou choose SSID is: $WIFIS\n ${RESET}"
@@ -142,7 +143,7 @@ terminal_qr() {
 }
 
 current_wifi_ssid() {
-  WIFIS="$(nmcli -t -f active,ssid dev wifi | egrep '^yes' | cut -d\: -f2 | tr -d '\r\n')"
+  WIFIS="$(nmcli -t -f active,ssid dev wifi | grep -E '^yes' | cut -d':' -f2 | tr -d '\r\n')"
   echo -e "${BLUE}===========================================${RESET}"
   echo -e "\nYou current active SSID is:${BOLD}${RED} $WIFIS\n ${RESET}"
   echo -e "${BLUE}===========================================${RESET}"
@@ -196,7 +197,7 @@ call_wifi_scan() {
     pgrep -x zbarcam >/dev/null && echo "Still Scanning" || exit 0
     # cleanup - add a trap that will remove $qr_data and kill zbarcam
     # if any of the signals - SIGHUP SIGINT SIGTERM it received.
-    trap "rm -f $qr_data ; kill -s 9 $pid; exit" SIGHUP SIGINT SIGTERM
+    trap 'rm -f "$qr_data" ; kill -s 9 "$pid"; exit' SIGHUP SIGINT SIGTERM
   done
 
   kill -s 9 $pid
@@ -204,14 +205,14 @@ call_wifi_scan() {
   rm -f $qr_data
 
   # Check if the QR contains WiFi data or not
-  if echo $wifiqrdata | grep --quiet ^WIFI; then
+  if echo "$wifiqrdata" | grep --quiet ^WIFI; then
     ## Go Go GUI and CLI Mod
     # ssid & key are not always in the same sequence - fix by using a dict and cut identifier for first key
-    if echo $wifiqrdata | grep --quiet "H:true;"; then
+    if echo "$wifiqrdata" | grep --quiet "H:true;"; then
     	QHIDE=true 
     fi
     declare -A wifiqrcred
-    wifiqrcred+=([$(echo $wifiqrdata | cut -b 6- | awk -F';' '{print $1}' | cut -d":" -f1)]=$(echo $wifiqrdata | cut -b 6- | awk -F';' '{print $1}' | cut -d":" -f2))
+    wifiqrcred+=([$(echo "$wifiqrdata" | cut -b 6- | awk -F';' '{print $1}' | cut -d":" -f1)]=$(echo "$wifiqrdata" | cut -b 6- | awk -F';' '{print $1}' | cut -d":" -f2))
     wifiqrcred+=([$(echo "$wifiqrdata" | awk -F';' '{print $2}' | cut -d":" -f1)]=$(echo "$wifiqrdata" | awk -F';' '{print $2}' | cut -d":" -f2))
     wifiqrcred+=([$(echo "$wifiqrdata" | awk -F';' '{print $3}' | cut -d":" -f1)]=$(echo "$wifiqrdata" | awk -F';' '{print $3}' | cut -d":" -f2))
 
@@ -286,8 +287,9 @@ call_wifi_scan_gui() {
   call_wifi_scan
   # Function with QR data
   if [[ "$QSSIDO" =~ "ON" ]]; then
-    zenity --question --title="Connect to WiFi" --text="Connect to '$QSSID'?" --width=200 --height=120 --icon-name=network-wireless 2>/dev/null
-    if [ $? = 0 ]; then
+    zenity --question --title="Connect to WiFi" --text="Connect to '$QSSID'?" --width=200 --height=120 --icon-name=network-wireless 2>/dev/null 
+    connectn=$?
+    if [ $connectn == 0 ]; then \
       scan_connect
     else
       exit
@@ -303,11 +305,11 @@ call_wifi_scan_gui() {
       TRUE "Retry scanning internally" \
       FALSE "Retry submitting another QR Code" )
     if [[ "$CHOICE" =~ "Retry scanning internally" ]]; then
-      echo e "${BOLD}Scanning in progess ... ${Reset}"
+      echo e "${BOLD}Scanning in progess ... ${RESET}"
       nmcli radio wifi off
       sleep 5
       scan_connect
-      if [ $? != 0 ]; then
+      if [ $connectn != 0 ]; then
         echo -e "${RED}==================${RESET}"
         echo -e "${BOLD}${WHITE}Can't find $QSSID ${RESET}"
         echo -e "${RED}==================${RESET}"
@@ -320,7 +322,7 @@ call_wifi_scan_gui() {
     fi
   elif [[ "$QHIDE" =~ "true" ]]; then
     zenity --question --title="Connect to Hidden WiFi" --text="Connect to '$QSSID'?" --width=200 --height=120 --icon-name=network-wireless 2>/dev/null
-    if [ $? = 0 ]; then
+    if [ $connectn = 0 ]; then
       scan_connect_hidden
     else
       exit
