Description: Implement Current WiFi, Hidden, Policy
 implement wifi current connect, Hidden Mode, Sudo Users Policy
 .
 wifi-qr (0.1-2) unstable; urgency=medium
 .
   * current and hidden arrary
Author: kokoye2007 <kokoye2007@debian>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2020-06-10

--- wifi-qr-0.1.orig/wifi-qr
+++ wifi-qr-0.1/wifi-qr
@@ -142,7 +142,10 @@ terminal_qr() {
 }
 
 current_wifi_ssid() {
-	nmcli device wifi show-password
+  WIFIS="$(nmcli -t -f active,ssid dev wifi | egrep '^yes' | cut -d\: -f2 | tr -d '\r\n')"
+  echo -e "${BLUE}===========================================${RESET}"
+  echo -e "\nYou current active SSID is:${BOLD}${RED} $WIFIS\n ${RESET}"
+  echo -e "${BLUE}===========================================${RESET}"
 }
 
 
@@ -164,8 +167,6 @@ call_wifi_pass() {
   fi
   if [[ "$HIDN" == *"yes"* ]]; then
       H="H:true;"
-  else
-    H=""
   fi
   echo -e "${GREEN}"
   echo ""
@@ -206,17 +207,21 @@ call_wifi_scan() {
   if echo $wifiqrdata | grep --quiet ^WIFI; then
     ## Go Go GUI and CLI Mod
     # ssid & key are not always in the same sequence - fix by using a dict and cut identifier for first key
+    if echo $wifiqrdata | grep --quiet "H:true;"; then
+    	QHIDE=true 
+    fi
     declare -A wifiqrcred
     wifiqrcred+=([$(echo $wifiqrdata | cut -b 6- | awk -F';' '{print $1}' | cut -d":" -f1)]=$(echo $wifiqrdata | cut -b 6- | awk -F';' '{print $1}' | cut -d":" -f2))
     wifiqrcred+=([$(echo "$wifiqrdata" | awk -F';' '{print $2}' | cut -d":" -f1)]=$(echo "$wifiqrdata" | awk -F';' '{print $2}' | cut -d":" -f2))
     wifiqrcred+=([$(echo "$wifiqrdata" | awk -F';' '{print $3}' | cut -d":" -f1)]=$(echo "$wifiqrdata" | awk -F';' '{print $3}' | cut -d":" -f2))
-    wifiqrcred+=([$(echo "$wifiqrdata" | awk -F';' '{print $4}' | cut -d":" -f1)]=$(echo "$wifiqrdata" | awk -F';' '{print $4}' | cut -d":" -f2))
 
     QSSID=${wifiqrcred[S]}
     QKEES=${wifiqrcred[P]}
-    QHIDE=${wifiqrcred[H]}
     QTYPE=${wifiqrcred[T]}
 
+
+
+
     if [[ "$QHIDE" == "true" ]]; then
       echo -e "${GREEN}==================${RESET}"
       echo -e "${BOLD}${WHITE}It's is HIDDEN ${RESET}"
@@ -335,6 +340,7 @@ scan_connect_hidden() {
   nmcli con add type wifi con-name "$QSSID" ssid "$QSSID" >/dev/null 2>&1
   nmcli con modify "$QSSID" wifi-sec.key-mgmt "$NTYPE" >/dev/null 2>&1
   nmcli con modify "$QSSID" wifi-sec.psk "$QKEES" >/dev/null 2>&1
+  nmcli con modify "$QSSID" wifi.hidden yes  >/dev/null 2>&1
   nmcli con up "$QSSID" >/dev/null 2>&1
 }
 
@@ -374,6 +380,6 @@ case $1 in
 			q for QR Scan and Connect WiFi GUI
 			v for WiFi-QR Version is $VERSION
 		"
-  current_wifi_ssid
+	nmcli device wifi show-password
   ;;
 esac
--- wifi-qr-0.1.orig/wifi-qr.desktop
+++ wifi-qr-0.1/wifi-qr.desktop
@@ -3,7 +3,7 @@ Type=Application
 Version=0.1
 Name=WiFi QR
 Comment=Wifi share with QR Code
-Exec=sh -c 'pkexec wifi-qr g'
+Exec=sh -c 'wifi-qr g'
 Icon=wifi-qr
 Keywords="QR; WiFi; Password; Share;"
 Terminal=false
@@ -12,10 +12,10 @@ Actions=ScanQR;CreateQR;
 
 [Desktop Action ScanQR]
 Name=Scan WiFi QR Code
-Exec=sh -c 'pkexec wifi-qr q'
+Exec=sh -c 'wifi-qr q'
 Terminal=false
 
 [Desktop Action CreateQR]
 Name=Create WiFi QR Code
-Exec=sh -c 'pkexec wifi-qr c'
+Exec=sh -c 'wifi-qr c'
 Terminal=false
